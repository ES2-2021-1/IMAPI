FORMAT: A1

# IM API

Descrição das rotas que fazem interface com o banco de dados.

# Group Users

Recursos relacionados ao User na API.

## User collection [/api/user/]

### Retornar um User [GET /api/user/{id}]

Retorna as informações de um usuário em específico.

+ Parameters
    + id : 1 (integer)
        Id do usuário.
        
+ Response 200 (application/json)

    - Body

            {
                "response": [
                    {
                        "id": 1,
                        "name": "João da Silva",
                        "email": "joao@mail.com",
                        "phone": "(12)3456-7890",
                        "cpf": "01234567891",
                        "role": 0,
                        "updatedAt" : "2021-09-09T20:29:03.625Z",
                        "createdAt" : "2021-09-09T20:29:03.625Z"
                    }
                ]
            }
        
    - Schema
    
            {
                "$schema" : "http://json-schema.org/draft-04/schema#",
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                    "response" : {
                        "type" : "array",
                        "minItems" : 1,
                        "maxItems" : 1,
                        "items" : {
                            "type" : "object",
                            "additionalProperties" : false,
                            "properties" : {
                                "id" : {
                                    "type" : "integer"
                                },
                                "name" : {
                                    "type" : "string",
                                    "minLength" : 3,
                                    "maxLength" : 255
                                },
                                "email" : {
                                    "type" : "string",
                                    "format" : "email"
                                },
                                "phone" : {
                                    "type" : "string",
                                    "pattern" : "\\([0-9]{2}\\)[0-9]{4,5}\\-[0-9]{4}"
                                },
                                "cpf" : {
                                    "type" : "string",
                                    "pattern" : "[0-9]{11}" 
                                },
                                "role" : {
                                    "type" : "integer",
                                    "minimum" : 0,
                                    "maximum" : 1
                                },
                                "updatedAt" : {
                                    "type" : "string",
                                    "pattern" :
                                        "[0-9]{4}\\-[0-9]{2}\\-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.[0-9]+Z"
                                },
                                "createdAt" : {
                                    "type" : "string",
                                    "pattern" :
                                        "[0-9]{4}\\-[0-9]{2}\\-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.[0-9]+Z"
                                }
                            }
                        }
                    }
                }
            }
        
+ Response 400 (application/json)

    - Body
            
            {
                "response": []
            }
        
    - Schema
    
            {
                "$schema" : "http://json-schema.org/draft-04/schema#",
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                    "response" : {
                        "type" : "array",
                        "maxItems" : 0
                        }
                }

            }

### Retornar todos os User [GET /api/user]

Retorna as informações de todos os usuários, em ordem crescente de acordo com a data da criação.
        
+ Response 200 (application/json)

    - Body

            [
                {
                    "id": 1,
                    "name": "João da Silva",
                    "email": "joao@mail.com",
                    "phone": "(12)3456-7890",
                    "cpf": "01234567891",
                    "role": 0,
                    "createdAt": "2021-09-09T20:29:03.625Z",
                    "updatedAt": "2021-09-09T20:29:03.625Z"
                },
                {
                    "id": 2,
                    "name": "Sílvia Pereira",
                    "email": "silviap3231@mail.com",
                    "phone": "(04)92222-1234",
                    "cpf": "94832193102",
                    "role": 0,
                    "createdAt": "2021-09-11T00:00:22.895Z",
                    "updatedAt": "2021-09-11T00:00:22.895Z"
                },
                {
                    "id": 4,
                    "name": "Robin Araújo",
                    "email": "robin_a@mail.com",
                    "phone": "(50)3563-1232",
                    "cpf": "01333127891",
                    "role": 1,
                    "createdAt": "2021-09-11T00:01:54.292Z",
                    "updatedAt": "2021-09-11T00:01:54.292Z"
                }
            ]
        
    - Schema
    
            {
                "$schema" : "http://json-schema.org/draft-04/schema#",
                "type" : "array",
                "items" : {
                    "type" : "object",
                    "additionalProperties" : false,
                    "properties" : {
                        "id" : {
                            "type" : "integer"
                        },
                        "name" : {
                            "type" : "string",
                            "minLength" : 3,
                            "maxLength" : 255
                        },
                        "email" : {
                            "type" : "string",
                            "format" : "email"
                        },
                        "phone" : {
                            "type" : "string",
                            "pattern" : "\\([0-9]{2}\\)[0-9]{4,5}\\-[0-9]{4}"
                        },
                        "cpf" : {
                            "type" : "string",
                            "pattern" : "[0-9]{11}" 
                        },
                        "role" : {
                            "type" : "integer",
                            "minimum" : 0,
                            "maximum" : 1
                        },
                        "updatedAt" : {
                            "type" : "string",
                            "pattern" :
                                "[0-9]{4}\\-[0-9]{2}\\-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.[0-9]+Z"
                        },
                        "createdAt" : {
                            "type" : "string",
                            "pattern" :
                                "[0-9]{4}\\-[0-9]{2}\\-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.[0-9]+Z"
                        }
                    }
                }
            }
        
+ Response 400 (application/json)

    - Body
            
            {
                "response": []
            }
        
    - Schema
    
            {
                "$schema" : "http://json-schema.org/draft-04/schema#",
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                    "response" : {
                        "type" : "array",
                        "maxItems" : 0
                        }
                }

            }

### Criar um User [POST]

Cria um novo usuário.

+ Request (application/json)

    - Body
    
            {
                "name" : "João da Silva",
                "email" : "joao@mail.com",
                "password" : "exemplo123",
                "password_confirmation" : "exemplo123",
                "phone" : "(12)3456-7890",
                "cpf" : "01234567891",
                "role" : 0
            }
    
    - Schema
        
            {
                "$schema" : "http://json-schema.org/draft-04/schema#",
                "type" : "object",
                "required" : ["name", "email", "password", 
                              "password_confirmation", "role"],
                "properties" : {
                    "name" : {
                        "type" : "string",
                        "minLength" : 3,
                        "maxLength" : 255
                    },
                    "email" : {
                        "type" : "string",
                        "format" : "email"
                    },
                    "password" : {
                        "type" : "string",
                        "minLength" : 6,
                        "maxLength" : 30
                    },
                    "password_confirmation" : {
                        "const": {
                            "$data": "1/password"
                        }
                    },
                    "phone" : {
                        "type" : "string",
                        "pattern" : "\\([0-9]{2}\\)[0-9]{4,5}\\-[0-9]{4}"
                    },
                    "cpf" : {
                        "type" : "string",
                        "pattern" : "[0-9]{11}" 
                    },
                    "role" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 1
                    }
                }
            }
        
+ Response 201 (application/json)

    - Body
    
            {
                "id" : 1,
                "name" : "João da Silva",
                "email" : "joao@mail.com",
                "password" : "",
                "phone" : "(12)3456-7890",
                "cpf" : "01234567891",
                "role" : 0,
                "updatedAt" : "2021-09-09T20:29:03.625Z",
                "createdAt" : "2021-09-09T20:29:03.625Z"
            }
        
    - Schema
    
            {
                "$schema" : "http://json-schema.org/draft-04/schema#",
                "type" : "object",
                "properties" : {
                    "id" : {
                        "type" : "integer"
                    },
                    "name" : {
                        "type" : "string",
                        "minLength" : 3,
                        "maxLength" : 255
                    },
                    "email" : {
                        "type" : "string",
                        "format" : "email"
                    },
                    "password" : {
                        "type" : "string",
                        "pattern" : ""
                    },
                    "phone" : {
                        "type" : "string",
                        "pattern" : "\\([0-9]{2}\\)[0-9]{4,5}\\-[0-9]{4}"
                    },
                    "cpf" : {
                        "type" : "string",
                        "pattern" : "[0-9]{11}" 
                    },
                    "role" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 1
                    },
                    "updatedAt" : {
                        "type" : "string",
                        "pattern" :
                            "[0-9]{4}\\-[0-9]{2}\\-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.[0-9]+Z"
                    },
                    "createdAt" : {
                        "type" : "string",
                        "pattern" :
                            "[0-9]{4}\\-[0-9]{2}\\-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.[0-9]+Z"
                    }
                }
            }
        
+ Response 400 (application/json)

    - Body
            
            {
                "errors" : {
                    "email" : [
                        "The email format is invalid."
                    ],
                    "password" : [
                        "The password confirmation does not match."
                    ],
                    "phone" : [
                        "The phone format is invalid."
                    ]
                }
            }
        
    - Schema
    
            {
             	"type" : "object",
                "additionalProperties" : false,
                "properties" : {
                    "errors" : {
                        "type" : "object",
                        "additionalProperties" : {
                            "type" : "array",
                            "minItems" : 1,
                            "items" : {
                                "type" : "string",
                                "minItems" : 1
                            }
                        }
                    }
                }
            }

### Editar um User [PATCH /api/user/{id}]

Cria um novo usuário.

+ Parameters
    + id : 1 (integer)
        Id do usuário.
        

+ Request (application/json)

    - Body
    
            {
                "name" : "João da Silva",
                "password" : "exemplo123",
                "password_confirmation" : "exemplo123",
                "phone" : "(12)3456-7890"
            }
    
    - Schema
        
            {
                "$schema" : "http://json-schema.org/draft-04/schema#",
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                    "name" : {
                        "type" : "string",
                        "minLength" : 3,
                        "maxLength" : 255
                    },
                    "email" : {
                        "type" : "string",
                        "format" : "email"
                    },
                    "password" : {
                        "type" : "string",
                        "minLength" : 6,
                        "maxLength" : 30
                    },
                    "password_confirmation" : {
                        "const": {
                            "$data": "1/password"
                        }
                    },
                    "phone" : {
                        "type" : "string",
                        "pattern" : "\\([0-9]{2}\\)[0-9]{4,5}\\-[0-9]{4}"
                    },
                    "cpf" : {
                        "type" : "string",
                        "pattern" : "[0-9]{11}" 
                    },
                    "role" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 1
                    }
                }
            }
        
+ Response 200 (text/html)

    - Body
    
            "Update performed successfully"
        
+ Response 400 (application/json)

    - Body
            
            {
                "errors" : {
                    "email" : [
                        "The email format is invalid."
                    ],
                    "password" : [
                        "The password confirmation does not match."
                    ],
                    "phone" : [
                        "The phone format is invalid."
                    ]
                }
            }
        
    - Schema
    
            {
             	"type" : "object",
                "additionalProperties" : false,
                "properties" : {
                    "errors" : {
                        "type" : "object",
                        "additionalProperties" : {
                            "type" : "array",
                            "minItems" : 1,
                            "items" : {
                                "type" : "string",
                                "minItems" : 1
                            }
                        }
                    }
                }
            }

### Remover um User [DELETE /api/user/{id}]

Cria um novo usuário.

+ Parameters
    + id : 1 (integer)
        Id do usuário.
        


        
+ Response 200 (text/html)

    - Body
    
            "Deleted successfully"
        
+ Response 400 (text/html)

    - Body
    
            "Not deleted"
        
